@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>

        <div class="d-flex align-items-center ">
            <div class="me-3">
                <div class="p-2 rounded-circle bg-secondary">@NameToInitials(@context.User?.Identity?.Name)</div>
            </div>
            <div>
                <a href="authentication/profile">@context.User.Identity.Name</a>
            </div>
            <div class="ms-auto">
                <HxContextMenu>
                     <HxContextMenuItem Text="Log out" OnClick="BeginSignOut" /> 
                    <CultureSelector />
                </HxContextMenu>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut()
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    /// <summary>
    /// Takes an email or name of the user and returns the user's initials.
    /// </summary>
    /// <param name="name"></param>
    /// <returns>The initials of first and last name</returns>

    private string NameToInitials(string name)
    {
        if (name.Contains('@'))
        {
            var mail = name.Split('@')[0].Split('.');
            if (mail.Length == 1) return mail[0][0].ToString().ToUpper();
            return ("" + mail[0][0] + mail[^1][0]).ToUpper();
        }
        var names = name.Split(' ');
        if (names.Length == 1) return names[0][0].ToString().ToUpper();
        return ("" + names[0][0] + names[^1][0]).ToUpper(); 
    }
}
